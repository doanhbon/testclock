[{"C:\\Users\\Admin\\Downloads\\my-app\\src\\countdown.js":"1","C:\\Users\\Admin\\Downloads\\my-app\\src\\clock.js":"2","C:\\Users\\Admin\\Downloads\\my-app\\src\\App.js":"3","C:\\Users\\Admin\\Downloads\\my-app\\src\\reportWebVitals.js":"4"},{"size":2807,"mtime":1609317577229,"results":"5","hashOfConfig":"6"},{"size":3659,"mtime":1609316306630,"results":"7","hashOfConfig":"6"},{"size":254,"mtime":1609319854783,"results":"8","hashOfConfig":"6"},{"size":362,"mtime":1606548095622,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"gp5izf",{"filePath":"12","messages":"13","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Admin\\Downloads\\my-app\\src\\countdown.js",["19","20"],"C:\\Users\\Admin\\Downloads\\my-app\\src\\clock.js",["21"],"import React, { useMemo, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Clock = props => {\r\n  const {\r\n    strokeColor,\r\n    width,\r\n    percent,\r\n    text,\r\n    initPercent,\r\n    colorStroke,\r\n    strokeWidth,\r\n    backgroundClock,\r\n    textColor,\r\n    textStrokeColor,\r\n    textSize,\r\n    textStrokeWidth\r\n  } = props;\r\n  const polarToCartesian = (centerX, centerY, radius, angleInDegrees) => {\r\n    const angleInRadians = ((angleInDegrees - 90) * Math.PI) / 180.0;\r\n\r\n    return {\r\n      x: centerX + radius * Math.cos(angleInRadians),\r\n      y: centerY + radius * Math.sin(angleInRadians)\r\n    };\r\n  };\r\n\r\n  const describeArc = (x, y, radius, startAngle, endAngle) => {\r\n    const start = polarToCartesian(x, y, radius, endAngle);\r\n    const end = polarToCartesian(x, y, radius, startAngle);\r\n\r\n    const largeArcFlag = endAngle - startAngle <= 180 ? '0' : '1';\r\n\r\n    const d = [\r\n      'M',\r\n      start.x,\r\n      start.y,\r\n      'A',\r\n      radius,\r\n      radius,\r\n      0,\r\n      largeArcFlag,\r\n      0,\r\n      end.x,\r\n      end.y\r\n    ].join(' ');\r\n\r\n    return d;\r\n  };\r\n\r\n  const [cx] = useState(width * 0.5);\r\n  const [cy] = useState(width * 0.5);\r\n  const [radius] = useState((width * 0.8) / 2);\r\n\r\n  const displayBackgroudStroke = useMemo(() => {\r\n    return (\r\n      <path\r\n        id=\"arc1\"\r\n        d={describeArc(cx, cy, radius, 0, 359.9999)}\r\n        fill=\"none\"\r\n        stroke={colorStroke}\r\n        strokeWidth={strokeWidth}\r\n      />\r\n    );\r\n  }, [cx, cy, radius, colorStroke, strokeWidth]);\r\n\r\n  const displayPercentStroke = () => {\r\n    return (\r\n      <path\r\n        id=\"arc1\"\r\n        d={describeArc(\r\n          cx,\r\n          cy,\r\n          radius,\r\n          0,\r\n          percent !== initPercent ? (360 / initPercent) * percent : 359.9999\r\n        )}\r\n        fill=\"none\"\r\n        stroke={strokeColor}\r\n        strokeWidth={strokeWidth}\r\n      />\r\n    );\r\n  };\r\n\r\n  const displayBackgroundCircle = useMemo(() => {\r\n    return (\r\n      <circle\r\n        cx={cx}\r\n        cy={cy}\r\n        r={radius}\r\n        stroke=\"none\"\r\n        strokeWidth=\"0\"\r\n        fill={backgroundClock}\r\n      />\r\n    );\r\n  }, [cx, cy, radius, backgroundClock]);\r\n\r\n  const displayText = () => {\r\n    return (\r\n      <text\r\n        x={cx}\r\n        y={cy}\r\n        fill={textColor}\r\n        stroke={textStrokeColor}\r\n        dominantBaseline=\"middle\"\r\n        textAnchor=\"middle\"\r\n        fontWeight=\"bold\"\r\n        fontSize={textSize}\r\n        strokeWidth={textStrokeWidth}\r\n      >\r\n        {text}\r\n      </text>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <svg\r\n      width={width}\r\n      height={width}\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      version=\"1.1\"\r\n    >\r\n      {displayBackgroudStroke}\r\n      {displayPercentStroke()}\r\n      {displayBackgroundCircle}\r\n      {displayText()}\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default Clock;\r\n\r\n// const { strokeColor, width, percent, text, initPercent } = props;\r\n\r\nClock.propTypes = {\r\n  strokeColor: PropTypes.string,\r\n  width: PropTypes.number,\r\n  percent: PropTypes.number,\r\n  initPercent: PropTypes.number,\r\n  text: PropTypes.string,\r\n  colorStroke: PropTypes.string,\r\n  strokeWidth: PropTypes.number,\r\n  backgroundClock: PropTypes.string,\r\n  textColor: PropTypes.string,\r\n  textSize: PropTypes.number,\r\n  textStrokeColor: PropTypes.string,\r\n  textStrokeWidth: PropTypes.number\r\n};\r\n\r\nClock.defaultProps = {\r\n  strokeColor: '#000000',\r\n  width: 200,\r\n  percent: 100,\r\n  initPercent: 100,\r\n  text: 'Clock',\r\n  colorStroke: '#EEEEEE',\r\n  strokeWidth: 20,\r\n  backgroundClock: '#FFFFFF',\r\n  textColor: '#FFFFFF',\r\n  textSize: 25,\r\n  textStrokeColor: '#000000',\r\n  textStrokeWidth: 2\r\n};\r\n","C:\\Users\\Admin\\Downloads\\my-app\\src\\App.js",[],"C:\\Users\\Admin\\Downloads\\my-app\\src\\reportWebVitals.js",[],{"ruleId":"22","severity":1,"message":"23","line":73,"column":6,"nodeType":"24","endLine":73,"endColumn":20,"suggestions":"25"},{"ruleId":"22","severity":1,"message":"26","line":82,"column":6,"nodeType":"24","endLine":82,"endColumn":15,"suggestions":"27"},{"ruleId":"22","severity":1,"message":"28","line":65,"column":6,"nodeType":"24","endLine":65,"endColumn":48,"suggestions":"29"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'currentSecond'. Either include it or remove the dependency array.","ArrayExpression",["30"],"React Hook useEffect has a missing dependency: 'handleTimeCountDown'. Either include it or remove the dependency array.",["31"],"React Hook useMemo has a missing dependency: 'describeArc'. Either include it or remove the dependency array.",["32"],{"desc":"33","fix":"34"},{"desc":"35","fix":"36"},{"desc":"37","fix":"38"},"Update the dependencies array to be: [currentSecond, secondsInput]",{"range":"39","text":"40"},"Update the dependencies array to be: [handleTimeCountDown, percent]",{"range":"41","text":"42"},"Update the dependencies array to be: [describeArc, cx, cy, radius, colorStroke, strokeWidth]",{"range":"43","text":"44"},[2082,2096],"[currentSecond, secondsInput]",[2254,2263],"[handleTimeCountDown, percent]",[1495,1537],"[describeArc, cx, cy, radius, colorStroke, strokeWidth]"]